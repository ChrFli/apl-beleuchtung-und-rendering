[gd_scene load_steps=4 format=3 uid="uid://diqp5p2ccnxcy"]

[sub_resource type="Shader" id="Shader_4lcpn"]
code = "shader_type canvas_item;

uniform float time : hint_range(0.0, 10.0); // Zeit
uniform float intensity : hint_range(0.0, 1.0) = 1.0; // Intensität des Glühwürmchen-Lichts
uniform float speed : hint_range(0.0, 10.0) = 1.0; // Geschwindigkeit der Bewegung
uniform vec2 resolution; // Auflösung des Bildes

// Eine einfache Zufallshashfunktion
float random(vec2 p) {
    return fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453);
}

void fragment() {
    vec2 uv = FRAGCOORD.xy / resolution.xy;
    
    // Berechnung einer zufälligen Position für jedes \"Glühwürmchen\"
    vec2 position = vec2(random(vec2(uv.x, uv.y)), random(vec2(uv.y, uv.x)));
    
    // Bewegung der Glühwürmchen basierend auf der Zeit und Geschwindigkeit
    position += vec2(sin(time * speed + position.x * 10.0), cos(time * speed + position.y * 10.0)) * 0.02;
    
    // Abstand zwischen dem aktuellen Fragment und dem Glühwürmchen
    float dist = length(uv - position);
    
    // Helligkeit des Glühwürmchens basierend auf dem Abstand und Zeit
    float brightness = exp(-dist * 30.0) * intensity;
    
    // Flimmern des Glühwürmchens
    brightness *= 0.5 + 0.5 * sin(time * 5.0 + dist * 10.0); // Flimmern hinzufügen
    
    // Setze die Farbe des Pixels
    vec3 color = vec3(brightness);
    
    // Gib das Endergebnis aus
    COLOR = vec4(color, 1.0);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_mh5k1"]
shader = SubResource("Shader_4lcpn")
shader_parameter/time = null
shader_parameter/intensity = 1.0
shader_parameter/speed = 1.0
shader_parameter/resolution = null

[sub_resource type="QuadMesh" id="QuadMesh_hvn8f"]

[node name="ShaderWinGame" type="Node3D"]

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(10, 0, 0, 0, 10, 0, 0, 0, 10, 0, 5, 0)
material_override = SubResource("ShaderMaterial_mh5k1")
mesh = SubResource("QuadMesh_hvn8f")
